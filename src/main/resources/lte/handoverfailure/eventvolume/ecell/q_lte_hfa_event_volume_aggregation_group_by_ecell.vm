##
## LTE Handover Failure eCell Event Volume Analysis (using aggregation tables)
##
## Velocity Parameter:
##
## Named PreparedStatement Parameter:
##      $starttime      start time
##      $endtime        end time
##      $interval       interval for different timerange
##      :dateFrom       starting time
##      :dateTo         ending time
##
#set($columnsToSelectforImpactedIMSI=["DATETIME_ID", "IMSI"])
#set($groupTable="GROUP_TYPE_E_RAT_VEND_HIER321")
#set($groupnameColumn="GROUP_NAME")
#set($joinKeys=["HIER321_ID"])
#set($INTERNAL_PROC_HO_PREP_X2_IN = 4111)
#set($INTERNAL_PROC_HO_PREP_X2_OUT = 4110)
#set($INTERNAL_PROC_HO_EXEC_X2_IN = 4113)
#set($INTERNAL_PROC_HO_EXEC_X2_OUT = 4112)
#set($INTERNAL_PROC_HO_PREP_S1_IN = 4103)
#set($INTERNAL_PROC_HO_PREP_S1_OUT = 4102)
#set($INTERNAL_PROC_HO_EXEC_S1_IN = 4105)
#set($INTERNAL_PROC_HO_EXEC_S1_OUT = 4104)
#DEFINE_CONSTANTS()

begin

select
    dateformat(err.TS, 'yyyy-mm-dd hh:mm:ss.S') as 'TIME',
    isnull(sum (case when err.EVENT_ID = $INTERNAL_PROC_HO_PREP_X2_IN then isnull(err.FAILURES, 0) end),0) as INTERNAL_PROC_HO_PREP_X2_IN,
    isnull(sum (case when err.EVENT_ID = $INTERNAL_PROC_HO_PREP_X2_OUT then isnull(err.FAILURES, 0) end),0) as INTERNAL_PROC_HO_PREP_X2_OUT,
    isnull(sum (case when err.EVENT_ID = $INTERNAL_PROC_HO_EXEC_X2_IN then isnull(err.FAILURES, 0) end),0) as INTERNAL_PROC_HO_EXEC_X2_IN,
    isnull(sum (case when err.EVENT_ID = $INTERNAL_PROC_HO_EXEC_X2_OUT then isnull(err.FAILURES, 0) end),0) as INTERNAL_PROC_HO_EXEC_X2_OUT,
    isnull(sum (case when err.EVENT_ID = $INTERNAL_PROC_HO_PREP_S1_IN then isnull(err.FAILURES, 0) end),0) as INTERNAL_PROC_HO_PREP_S1_IN,
    isnull(sum (case when err.EVENT_ID = $INTERNAL_PROC_HO_PREP_S1_OUT then isnull(err.FAILURES, 0) end),0) as INTERNAL_PROC_HO_PREP_S1_OUT,
    isnull(sum (case when err.EVENT_ID = $INTERNAL_PROC_HO_EXEC_S1_IN then isnull(err.FAILURES, 0) end),0) as INTERNAL_PROC_HO_EXEC_S1_IN,
    isnull(sum (case when err.EVENT_ID = $INTERNAL_PROC_HO_EXEC_S1_OUT then isnull(err.FAILURES, 0) end),0) as INTERNAL_PROC_HO_EXEC_S1_OUT,
    isnull(max(imsiTable.IMPACTED_SUBSCRIBERS), 0) as 'Impacted Subscribers'

from
    (
        select
            tmp_st,
            EVENT_ID,
            isnull(sum(NO_OF_ERRORS), 0) as FAILURES
        from
            (
                select
                    DATETIME_ID,
                    EVENT_ID,
                    sum(NO_OF_ERRORS) as NO_OF_ERRORS
                from
                    $aggregationView as aggView,
                    $groupTable as groupTable
                where
                    #GET_DATETIME_RANGE()
                    and groupTable.HIER321_ID = aggView.HIER321_ID
                    and groupTable.GROUP_NAME = :groupname
                group by
                    EVENT_ID,
                    DATETIME_ID
            ) as err
            ,#GET_CHART_TIMES($starttime $endtime $interval)
        where
            DATETIME_ID >= tmp_st
            and DATETIME_ID < tmp_et
        group by
            tmp_st,
            EVENT_ID
    ) as err ( TS, EVENT_ID, FAILURES)
    full outer join
    (
        select
            tmp_st,
            count(distinct(IMSI))
        from
             #if ($timerange == "TR_4")
                 #REPLACE_RAW_VIEW_WITH_RAW_TABLES_AND_FILTER_COLUMNS_WITH_TAC_EXCLUSION_SPECIFY_COLUMNS_GROUPS_WEEK($TECH_PACK_LIST.getAllRawTables() "impactedIMSI" $columnsToSelectforImpactedIMSI)
             #else
                 #REPLACE_RAW_VIEW_WITH_RAW_TABLES_AND_FILTER_COLUMNS_WITH_TAC_EXCLUSION_SPECIFY_COLUMNS_GROUPS($TECH_PACK_LIST.getAllRawTables() "impactedIMSI" $columnsToSelectforImpactedIMSI)
             #end
            ,#GET_CHART_TIMES($starttime $endtime $interval)
        where
            DATETIME_ID >= tmp_st
            and DATETIME_ID < tmp_et
        group by
            tmp_st
    ) as imsiTable(TS, IMPACTED_SUBSCRIBERS)
    on
        err.TS = imsiTable.TS
where
    dateformat(err.TS, 'yyyy-mm-dd hh:mm:ss.S') is not null
group by
    dateformat(err.TS, 'yyyy-mm-dd hh:mm:ss.S')
order by
    dateformat(err.TS, 'yyyy-mm-dd hh:mm:ss.S')

end